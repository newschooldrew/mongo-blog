{"ast":null,"code":"import axios from 'axios';\nimport React, { useContext } from 'react';\nimport Context from '../src/Context';\nconst {\n  dispatch\n} = useContext(Context);\nexport const createUser = user => {\n  axios.post('/create-user', user, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    }\n  }).then(res => {\n    console.log(res);\n\n    if (res.data == 'user already exists') {\n      console.log(\"user already exists!\");\n      localStorage.setItem(\"sign_up_msg\", \"user already exists\");\n    }\n  });\n};\nexport const signInUser = (user, history) => {\n  axios.post('/sign-in-user', user, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    }\n  }).then(res => {\n    console.log(res.data);\n\n    if (res.data === 'user not found' || res.data === 'password not found') {\n      localStorage.setItem(\"sign_in_msg\", \"login credentials not found\");\n    } else {\n      localStorage.setItem('username', res.headers['username']);\n      localStorage.setItem('token', res.headers['authorization']);\n      dispatch({\n        type: \"FETCH_USER\",\n        payload: res.headers.username\n      });\n      history.push('/welcome');\n    }\n  });\n};\nexport const getUser = () => {\n  const token = localStorage.getItem('token');\n\n  if (token) {\n    console.log(\"welcome\");\n    console.log(token);\n  } else {\n    console.log(\"please sign in\");\n  }\n};\nexport const signOut = history => {\n  localStorage.removeItem('username');\n  localStorage.removeItem('token');\n  history.push('/');\n};\nexport const createPost = post => {\n  axios.post('/create-post', post);\n};","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/actions.js"],"names":["axios","React","useContext","Context","dispatch","createUser","user","post","headers","then","res","console","log","data","localStorage","setItem","signInUser","history","type","payload","username","push","getUser","token","getItem","signOut","removeItem","createPost"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,MAAM;AAACC,EAAAA;AAAD,IAAaF,UAAU,CAACC,OAAD,CAA7B;AAEA,OAAO,MAAME,UAAU,GAAIC,IAAI,IAAI;AAC/BN,EAAAA,KAAK,CAACO,IAAN,CAAW,cAAX,EAA0BD,IAA1B,EAA+B;AACvBE,IAAAA,OAAO,EAAE;AACT,sBAAgB,kBADP;AAET,gBAAU;AAFD;AADc,GAA/B,EAIOC,IAJP,CAIYC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,QAAGA,GAAG,CAACG,IAAJ,IAAY,qBAAf,EAAqC;AACjCF,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAmC,qBAAnC;AACH;AACJ,GAVL;AAWC,CAZE;AAcP,OAAO,MAAMC,UAAU,GAAG,CAACV,IAAD,EAAMW,OAAN,KAAiB;AAEnCjB,EAAAA,KAAK,CAACO,IAAN,CAAW,eAAX,EAA2BD,IAA3B,EAAgC;AAChCE,IAAAA,OAAO,EAAE;AACT,sBAAgB,kBADP;AAET,gBAAU;AAFD;AADuB,GAAhC,EAKDC,IALC,CAKIC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;;AAEA,QAAGH,GAAG,CAACG,IAAJ,KAAa,gBAAb,IAAiCH,GAAG,CAACG,IAAJ,KAAa,oBAAjD,EAAsE;AAClEC,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAmC,6BAAnC;AACH,KAFD,MAGK;AACDD,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCL,GAAG,CAACF,OAAJ,CAAY,UAAZ,CAAhC;AACAM,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BL,GAAG,CAACF,OAAJ,CAAY,eAAZ,CAA7B;AACAJ,MAAAA,QAAQ,CAAC;AAACc,QAAAA,IAAI,EAAC,YAAN;AAAmBC,QAAAA,OAAO,EAACT,GAAG,CAACF,OAAJ,CAAYY;AAAvC,OAAD,CAAR;AACAH,MAAAA,OAAO,CAACI,IAAR,CAAa,UAAb;AACH;AACJ,GAjBG;AAkBP,CApBM;AAsBP,OAAO,MAAMC,OAAO,GAAG,MAAK;AAExB,QAAMC,KAAK,GAAGT,YAAY,CAACU,OAAb,CAAqB,OAArB,CAAd;;AACA,MAAGD,KAAH,EAAS;AACLZ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACH,GAHD,MAGK;AACDZ,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;AACJ,CATM;AAWP,OAAO,MAAMa,OAAO,GAAGR,OAAO,IAAG;AAC7BH,EAAAA,YAAY,CAACY,UAAb,CAAwB,UAAxB;AACAZ,EAAAA,YAAY,CAACY,UAAb,CAAwB,OAAxB;AACAT,EAAAA,OAAO,CAACI,IAAR,CAAa,GAAb;AACH,CAJM;AAMP,OAAO,MAAMM,UAAU,GAAGpB,IAAI,IAAG;AAC7BP,EAAAA,KAAK,CAACO,IAAN,CAAW,cAAX,EAA2BA,IAA3B;AACH,CAFM","sourcesContent":["import axios from 'axios'\nimport React, {useContext} from 'react'\nimport Context from '../src/Context'\n\nconst {dispatch} = useContext(Context)\n\nexport const createUser =  user => {\n    axios.post('/create-user',user,{ \n            headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'}\n        }).then(res => {\n            console.log(res)\n            if(res.data == 'user already exists'){\n                console.log(\"user already exists!\")\n                localStorage.setItem(\"sign_up_msg\",\"user already exists\")\n            }\n        })\n    }\n\nexport const signInUser = (user,history) =>{\n        \n        axios.post('/sign-in-user',user,{ \n        headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n        }\n    }).then(res => {\n        console.log(res.data)\n        \n        if(res.data === 'user not found' || res.data === 'password not found'){\n            localStorage.setItem(\"sign_in_msg\",\"login credentials not found\")\n        }\n         else{\n            localStorage.setItem('username',res.headers['username'])\n            localStorage.setItem('token',res.headers['authorization'])\n            dispatch({type:\"FETCH_USER\",payload:res.headers.username})\n            history.push('/welcome')\n        }\n    })\n}\n\nexport const getUser = () =>{\n\n    const token = localStorage.getItem('token');\n    if(token){\n        console.log(\"welcome\")\n        console.log(token)\n    }else{\n        console.log(\"please sign in\")\n    }\n}\n\nexport const signOut = history =>{\n    localStorage.removeItem('username')\n    localStorage.removeItem('token')\n    history.push('/')\n}\n\nexport const createPost = post =>{\n    axios.post('/create-post', post)\n}"]},"metadata":{},"sourceType":"module"}