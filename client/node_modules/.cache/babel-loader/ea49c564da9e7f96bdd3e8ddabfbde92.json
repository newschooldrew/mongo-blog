{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/components/LikeComment/LikeComment.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { fetchFavorites, increaseCommentLike, decreaseCommentLike } from '../../actions';\nimport AuthContext from '../../AuthContext';\n\nconst LikeComment = ({\n  sub,\n  comment_id,\n  post_id,\n  idx\n}) => {\n  const {\n    state,\n    dispatch,\n    allPosts\n  } = useContext(AuthContext);\n  const {\n    username,\n    favorites,\n    commentLiked,\n    commentDisliked\n  } = state;\n  const [values, setValues] = useState({\n    post_id,\n    comment_id\n  });\n  const [liked, setLiked] = useState('');\n  useEffect(() => {\n    console.log(liked);\n    console.log(state);\n    const prevLiked = favorites.findIndex(fav => fav == id) > -1;\n    console.log(\"prevLiked:\");\n    console.log(prevLiked);\n    setLiked(prevLiked);\n  }, [username, commentLiked, commentDisliked]);\n\n  const handleCommentClick = e => {\n    const {\n      id\n    } = e.target;\n\n    if (prevLiked == true) {\n      console.log(\"previously liked\");\n      decreaseCommentLike(values.post_id, values.comment_id, username, dispatch);\n    } else {\n      console.log(\"not previously liked\");\n      increaseCommentLike(values.post_id, values.comment_id, username, dispatch);\n      setLiked(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, liked ? /*#__PURE__*/React.createElement(\"button\", {\n    id: sub._id,\n    onClick: e => handleCommentClick(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }\n  }, \"Like Comment\") : /*#__PURE__*/React.createElement(\"button\", {\n    id: sub._id,\n    onClick: handleCommentClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 107\n    }\n  }, \"Unlike Comment\"));\n};\n\nexport default LikeComment;","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/components/LikeComment/LikeComment.js"],"names":["React","useContext","useEffect","useState","fetchFavorites","increaseCommentLike","decreaseCommentLike","AuthContext","LikeComment","sub","comment_id","post_id","idx","state","dispatch","allPosts","username","favorites","commentLiked","commentDisliked","values","setValues","liked","setLiked","console","log","prevLiked","findIndex","fav","id","handleCommentClick","e","target","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAAQC,cAAR,EAAuBC,mBAAvB,EAA2CC,mBAA3C,QAAqE,eAArE;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,GAAD;AAAKC,EAAAA,UAAL;AAAgBC,EAAAA,OAAhB;AAAwBC,EAAAA;AAAxB,CAAD,KAAkC;AAClD,QAAM;AAACC,IAAAA,KAAD;AAAOC,IAAAA,QAAP;AAAgBC,IAAAA;AAAhB,MAA4Bd,UAAU,CAACM,WAAD,CAA5C;AACA,QAAM;AAACS,IAAAA,QAAD;AAAUC,IAAAA,SAAV;AAAoBC,IAAAA,YAApB;AAAiCC,IAAAA;AAAjC,MAAoDN,KAA1D;AACA,QAAM,CAACO,MAAD,EAAQC,SAAR,IAAqBlB,QAAQ,CAAC;AAACQ,IAAAA,OAAD;AAASD,IAAAA;AAAT,GAAD,CAAnC;AACA,QAAM,CAACY,KAAD,EAAOC,QAAP,IAAmBpB,QAAQ,CAAC,EAAD,CAAjC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVsB,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AAEA,UAAMa,SAAS,GAAGT,SAAS,CAACU,SAAV,CAAoBC,GAAG,IAAIA,GAAG,IAAIC,EAAlC,IAAwC,CAAC,CAA3D;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACAH,IAAAA,QAAQ,CAACG,SAAD,CAAR;AAEH,GATQ,EASP,CAACV,QAAD,EAAUE,YAAV,EAAuBC,eAAvB,CATO,CAAT;;AAWA,QAAMW,kBAAkB,GAAGC,CAAC,IAAG;AAC3B,UAAM;AAACF,MAAAA;AAAD,QAAOE,CAAC,CAACC,MAAf;;AAEA,QAAGN,SAAS,IAAI,IAAhB,EAAqB;AACjBF,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAnB,MAAAA,mBAAmB,CAACc,MAAM,CAACT,OAAR,EAAgBS,MAAM,CAACV,UAAvB,EAAkCM,QAAlC,EAA2CF,QAA3C,CAAnB;AACH,KAHD,MAGM;AACFU,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACApB,MAAAA,mBAAmB,CAACe,MAAM,CAACT,OAAR,EAAgBS,MAAM,CAACV,UAAvB,EAAkCM,QAAlC,EAA2CF,QAA3C,CAAnB;AACAS,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ,GAXD;;AAaA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,gBAAI;AAAQ,IAAA,EAAE,EAAEb,GAAG,CAACwB,GAAhB;AAAqB,IAAA,OAAO,EAAEF,CAAC,IAAID,kBAAkB,CAACC,CAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAJ,gBAAwF;AAAQ,IAAA,EAAE,EAAEtB,GAAG,CAACwB,GAAhB;AAAqB,IAAA,OAAO,EAAEH,kBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADlG,CADJ;AAKH,CAnCD;;AAqCA,eAAetB,WAAf","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\nimport {fetchFavorites,increaseCommentLike,decreaseCommentLike} from '../../actions'\nimport AuthContext from '../../AuthContext'\n\nconst LikeComment = ({sub,comment_id,post_id,idx}) => {\n    const {state,dispatch,allPosts} = useContext(AuthContext)\n    const {username,favorites,commentLiked,commentDisliked} = state;\n    const [values,setValues] = useState({post_id,comment_id})\n    const [liked,setLiked] = useState('')\n\n    useEffect(()=>{\n        console.log(liked)\n        console.log(state)\n        \n        const prevLiked = favorites.findIndex(fav => fav == id) > -1;\n        console.log(\"prevLiked:\")\n        console.log(prevLiked)\n        setLiked(prevLiked)\n\n    },[username,commentLiked,commentDisliked])\n    \n    const handleCommentClick = e =>{\n        const {id} = e.target;\n\n        if(prevLiked == true){\n            console.log(\"previously liked\")\n            decreaseCommentLike(values.post_id,values.comment_id,username,dispatch)\n        } else{\n            console.log(\"not previously liked\")\n            increaseCommentLike(values.post_id,values.comment_id,username,dispatch)\n            setLiked(true)\n        }\n    }\n\n    return (\n        <div>\n            {liked ? (<button id={sub._id} onClick={e => handleCommentClick(e)}>Like Comment</button>) : (<button id={sub._id} onClick={handleCommentClick}>Unlike Comment</button>)}\n        </div>\n    )\n}\n\nexport default LikeComment\n"]},"metadata":{},"sourceType":"module"}