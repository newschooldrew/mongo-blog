{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/components/IndividualPost/IndividualPost.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport AuthContext from '../../AuthContext';\nimport { withRouter } from 'react-router-dom';\nimport LikePost from '../LikePost/LikePost';\nimport EditComment from '../EditComment/EditComment';\nimport LikeComment from '../LikeComment/LikeComment';\nimport update from 'react-addons-update';\nimport { postComment } from '../../actions';\n\nconst IndividualPost = ({\n  postInfo\n}) => {\n  const {\n    state,\n    dispatch\n  } = useContext(AuthContext);\n  const {\n    username,\n    editMode,\n    favorites\n  } = state;\n  const [comment, setComment] = useState({});\n  const [comment_id, setId] = useState('');\n  const [edit_id, setEditId] = useState('');\n  const [edit_flag, setEditFlag] = useState(false);\n  const [key, setKey] = useState('');\n  let new_comment;\n  console.log(\"postInfo:\");\n  console.log(postInfo);\n\n  const formatDate = date => {\n    const newDate = new Date(date).toLocaleDateString('en-US');\n    const newTime = new Date(date).toLocaleTimeString('en-US');\n    return `${newDate} at ${newTime}`;\n  };\n\n  const editComment = info => {\n    console.log(\"info:\");\n    console.log(info.sub._id);\n    console.log(\"Edit hit\");\n    setEditId(info.sub._id);\n    dispatch({\n      type: \"TOGGLE_EDIT_MODE\",\n      payload: editMode\n    });\n  };\n\n  const handleChange = e => {\n    e.persist();\n    setId(e.target.id);\n    setComment({\n      [e.target.id]: e.target.value\n    });\n    new_comment = comment[e.target.id];\n    setKey(e.target.getAttribute('data-mongo-id'));\n  };\n\n  const handleSubmit = async e => {\n    console.log(key);\n    console.log(e.target.getAttribute('data-mongo-id'));\n    const newData = update(key, {\n      $set: e.target.getAttribute('data-mongo-id')\n    });\n    const new_comment = comment[comment_id];\n    await postComment(new_comment, username, comment_id, newData, dispatch);\n    await setComment('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }, postInfo.content), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  }, \"Written by:\", postInfo.username), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }\n  }, \"Likes:\", postInfo.likes), /*#__PURE__*/React.createElement(LikePost, {\n    id: postInfo._id,\n    user: postInfo.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }, postInfo.comments.map((sub, idx) => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 37\n    }\n  }, sub.commenter == username ? /*#__PURE__*/React.createElement(\"a\", {\n    role: \"button\",\n    onClick: e => editComment({\n      sub\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 71\n    }\n  }, \"edit\") : null, editMode && edit_id === sub._id ? /*#__PURE__*/React.createElement(EditComment, {\n    id: edit_id,\n    edit_flag: edit_flag,\n    post_id: postInfo._id,\n    content: sub.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 77\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 175\n    }\n  }, sub.content), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 41\n    }\n  }, \"by: \", sub.commenter), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 41\n    }\n  }, \"by: \", sub._id), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 41\n    }\n  }, \"Date posted: \", formatDate(sub.createdDate)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 41\n    }\n  }, \"Comment likes: \", sub.likes), /*#__PURE__*/React.createElement(LikeComment, {\n    comment_id: sub._id,\n    favorites: state.favorites,\n    liked: sub.hasBeenLiked,\n    post_id: postInfo._id,\n    sub: sub,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(\"textarea\", {\n    key: postInfo._id,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-mongo-id\": postInfo._id,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, \"Leave a Comment\"));\n};\n\nexport default withRouter(IndividualPost);","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/components/IndividualPost/IndividualPost.js"],"names":["React","useContext","useEffect","useState","AuthContext","withRouter","LikePost","EditComment","LikeComment","update","postComment","IndividualPost","postInfo","state","dispatch","username","editMode","favorites","comment","setComment","comment_id","setId","edit_id","setEditId","edit_flag","setEditFlag","key","setKey","new_comment","console","log","formatDate","date","newDate","Date","toLocaleDateString","newTime","toLocaleTimeString","editComment","info","sub","_id","type","payload","handleChange","e","persist","target","id","value","getAttribute","handleSubmit","newData","$set","content","likes","comments","map","idx","commenter","createdDate","hasBeenLiked"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\nimport AuthContext from '../../AuthContext'\nimport {withRouter} from 'react-router-dom'\nimport LikePost from '../LikePost/LikePost'\nimport EditComment from '../EditComment/EditComment'\nimport LikeComment from '../LikeComment/LikeComment'\nimport update from 'react-addons-update'\nimport {postComment} from '../../actions'\n\nconst IndividualPost = ({postInfo}) => {\n    const {state,dispatch} = useContext(AuthContext)\n    const {username,editMode,favorites} = state;\n    \n    const [comment, setComment] = useState({})\n    const [comment_id, setId] = useState('')\n    const [edit_id, setEditId] = useState('')\n    const [edit_flag, setEditFlag] = useState(false)\n    const [key, setKey] = useState('')\n    let new_comment;\n    console.log(\"postInfo:\")\n    console.log(postInfo)\n\n    const formatDate = date =>{\n        const newDate = new Date(date).toLocaleDateString('en-US');\n        const newTime = new Date(date).toLocaleTimeString('en-US')\n        return `${newDate} at ${newTime}`\n    }\n\n    const editComment = info =>{\n        console.log(\"info:\")\n        console.log(info.sub._id)\n        console.log(\"Edit hit\")\n        setEditId(info.sub._id)\n        dispatch({type:\"TOGGLE_EDIT_MODE\",payload:editMode})\n    }\n\n    const handleChange = e => {\n        e.persist()\n        setId(e.target.id)\n        setComment({[e.target.id]:e.target.value});\n        new_comment = comment[e.target.id]\n        setKey(e.target.getAttribute('data-mongo-id'))\n    }\n    \n    const handleSubmit =  async e =>{\n        console.log(key)\n        console.log(e.target.getAttribute('data-mongo-id'))\n\n        const newData = update(key,{\n            $set:e.target.getAttribute('data-mongo-id')\n        })\n\n        const new_comment = comment[comment_id]\n        await postComment(new_comment, username,comment_id,newData,dispatch)\n        await setComment('');\n    }\n\n    return (\n        <div>\n                                <div>{postInfo.content}</div>\n                                <div>Written by:{postInfo.username}</div>\n                                <div>Likes:{postInfo.likes}</div>\n                                    <LikePost id={postInfo._id} user={postInfo.username}/>\n                                    {/* idx={idx}  */}\n                                <br />\n                                <ul>\n                                {postInfo.comments.map((sub,idx) =>\n                                    <li>\n                                        {sub.commenter == username ? (<a role=\"button\" onClick={e => editComment({sub})}>edit</a>):null}\n                                        {editMode && edit_id === sub._id ? (<EditComment id={edit_id} edit_flag={edit_flag} post_id={postInfo._id}content={sub.content} />) :(<div>{sub.content}</div> )}\n                                        <div>by: {sub.commenter}</div>\n                                        <div>by: {sub._id}</div>\n                                        <div>Date posted: {formatDate(sub.createdDate)}</div>\n                                        <div>Comment likes: {sub.likes}</div>\n                                        <LikeComment comment_id={sub._id} favorites={state.favorites} liked={sub.hasBeenLiked} post_id={postInfo._id} sub={sub}/>\n                                        <br />\n                                    </li>\n                                    )}\n                                </ul>\n                                <textarea key={postInfo._id} onChange={handleChange}></textarea>\n                            <button data-mongo-id={postInfo._id} onClick={handleSubmit}>Leave a Comment</button>\n                            </div> \n    )\n}\n\nexport default withRouter(IndividualPost)\n"]},"metadata":{},"sourceType":"module"}