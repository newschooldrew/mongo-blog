{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/components/IndividualPost/IndividualPost.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport AuthContext from '../../AuthContext';\nimport { withRouter } from 'react-router-dom';\nimport LikePost from '../LikePost/LikePost';\n\nconst IndividualPost = ({\n  postInfo\n}) => {\n  const {\n    state,\n    dispatch\n  } = useContext(AuthContext);\n  const {\n    username,\n    allPosts\n  } = state;\n  const [edit_id, setEditId] = useState('');\n  console.log(\"postInfo:\");\n  console.log(postInfo);\n\n  const editComment = info => {\n    console.log(\"info:\");\n    console.log(info.sub._id);\n    console.log(\"Edit hit\");\n    setEditId(info.sub._id);\n    dispatch({\n      type: \"TOGGLE_EDIT_MODE\",\n      payload: editMode\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 33\n    }\n  }, postInfo.content), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 33\n    }\n  }, \"Written by:\", postInfo.username), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 33\n    }\n  }, \"Likes:\", postInfo.likes), /*#__PURE__*/React.createElement(LikePost, {\n    id: postInfo._id,\n    user: postInfo.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 33\n    }\n  }, postInfo.comments.map((sub, idx) => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 37\n    }\n  }, sub.commenter == username ? /*#__PURE__*/React.createElement(\"a\", {\n    role: \"button\",\n    onClick: e => editComment({\n      sub\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 71\n    }\n  }, \"edit\") : null, editMode && edit_id === sub._id ? /*#__PURE__*/React.createElement(EditComment, {\n    id: edit_id,\n    edit_flag: edit_flag,\n    post_id: postInfo._id,\n    content: sub.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 77\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 175\n    }\n  }, sub.content), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 41\n    }\n  }, \"by: \", sub.commenter), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 41\n    }\n  }, \"by: \", sub._id), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 41\n    }\n  }, \"Date posted: \", formatDate(sub.createdDate)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 41\n    }\n  }, \"Comment likes: \", sub.likes), /*#__PURE__*/React.createElement(LikeComment, {\n    comment_id: sub._id,\n    idx: idx,\n    favorites: state.favorites,\n    liked: sub.hasBeenLiked,\n    post_id: postInfo._id,\n    sub: sub,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(\"textarea\", {\n    key: postInfo._id,\n    id: idx,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-mongo-id\": postInfo._id,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, \"Leave a Comment\"));\n};\n\nexport default withRouter(IndividualPost);","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/components/IndividualPost/IndividualPost.js"],"names":["React","useContext","useEffect","useState","AuthContext","withRouter","LikePost","IndividualPost","postInfo","state","dispatch","username","allPosts","edit_id","setEditId","console","log","editComment","info","sub","_id","type","payload","editMode","content","likes","comments","map","idx","commenter","e","edit_flag","formatDate","createdDate","favorites","hasBeenLiked","handleChange","handleSubmit"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\nimport AuthContext from '../../AuthContext'\nimport {withRouter} from 'react-router-dom'\nimport LikePost from '../LikePost/LikePost'\n\nconst IndividualPost = ({postInfo}) => {\n    const {state,dispatch} = useContext(AuthContext)\n    const {username,allPosts} = state\n    const [edit_id, setEditId] = useState('')\n    console.log(\"postInfo:\")\n    console.log(postInfo)\n\n    const editComment = info =>{\n        console.log(\"info:\")\n        console.log(info.sub._id)\n        console.log(\"Edit hit\")\n        setEditId(info.sub._id)\n        dispatch({type:\"TOGGLE_EDIT_MODE\",payload:editMode})\n    }\n\n\n    return (\n        <div>\n                                <div>{postInfo.content}</div>\n                                <div>Written by:{postInfo.username}</div>\n                                <div>Likes:{postInfo.likes}</div>\n                                    <LikePost id={postInfo._id} user={postInfo.username}/>\n                                    {/* idx={idx}  */}\n                                <br />\n                                <ul>\n                                {postInfo.comments.map((sub,idx) =>\n                                    <li>\n                                        {sub.commenter == username ? (<a role=\"button\" onClick={e => editComment({sub})}>edit</a>):null}\n                                        {editMode && edit_id === sub._id ? (<EditComment id={edit_id} edit_flag={edit_flag} post_id={postInfo._id}content={sub.content} />) :(<div>{sub.content}</div> )}\n                                        <div>by: {sub.commenter}</div>\n                                        <div>by: {sub._id}</div>\n                                        <div>Date posted: {formatDate(sub.createdDate)}</div>\n                                        <div>Comment likes: {sub.likes}</div>\n                                        <LikeComment comment_id={sub._id} idx={idx} favorites={state.favorites} liked={sub.hasBeenLiked} post_id={postInfo._id} sub={sub}/>\n                                        <br />\n                                    </li>\n                                    )}\n                                </ul>\n                                <textarea key={postInfo._id} id={idx} onChange={handleChange}></textarea>\n                            <button data-mongo-id={postInfo._id} onClick={handleSubmit}>Leave a Comment</button>\n                            </div> \n    )\n}\n\nexport default withRouter(IndividualPost)\n"]},"metadata":{},"sourceType":"module"}