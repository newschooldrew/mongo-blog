{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/components/Posts/Posts.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport AuthContext from '../../AuthContext';\nimport { fetchAllPosts, postComment } from '../../actions';\n\nconst Posts = () => {\n  const {\n    state,\n    dispatch\n  } = useContext(AuthContext);\n  const {\n    username,\n    allPosts\n  } = state;\n  const [comment, setComment] = useState({});\n  const [comment_id, setId] = useState('');\n  const [key, setKey] = useState('');\n  useEffect(() => {\n    fetchAllPosts(username, dispatch);\n  }, [username]);\n  let new_comment;\n\n  const handleChange = e => {\n    e.persist();\n    setKey(e.target.getAttribute('data-mongo-id'));\n    console.log(key);\n    setId(e.target.id);\n    console.log(comment_id);\n    setComment({\n      [e.target.id]: e.target.value\n    });\n    console.log(comment[e.target.id]);\n    new_comment = comment[e.target.id];\n  };\n\n  const handleSubmit = () => {\n    const new_comment = comment[comment_id];\n    console.log(new_comment);\n    console.log(comment_id);\n    postComment(new_comment, username, comment_id);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, allPosts && allPosts.map((post, i) => {\n    const {\n      _id\n    } = post;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, post._id), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, post.title), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, post.content), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, \"Written by:\", post.username), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      key: post._id,\n      \"data-mongo-id\": post._id,\n      id: i,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, \"Leave a Comment\"));\n  }));\n};\n\nexport default Posts;","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/components/Posts/Posts.js"],"names":["React","useContext","useEffect","useState","AuthContext","fetchAllPosts","postComment","Posts","state","dispatch","username","allPosts","comment","setComment","comment_id","setId","key","setKey","new_comment","handleChange","e","persist","target","getAttribute","console","log","id","value","handleSubmit","map","post","i","_id","title","content"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\nimport AuthContext from '../../AuthContext'\nimport {fetchAllPosts,postComment} from '../../actions'\n\nconst Posts = () => {\n    const {state,dispatch} = useContext(AuthContext)\n    const {username,allPosts} = state;\n    const [comment, setComment] = useState({})\n    const [comment_id, setId] = useState('')\n    const [key, setKey] = useState('')\n    \n    useEffect(() =>{\n        fetchAllPosts(username,dispatch)\n    },[username])\n\n    let new_comment;\n    const handleChange = e => {\n        e.persist()\n        setKey(e.target.getAttribute('data-mongo-id'))\n        console.log(key)\n        setId(e.target.id)\n        console.log(comment_id)\n        setComment({[e.target.id]:e.target.value});\n        console.log(comment[e.target.id])\n        new_comment = comment[e.target.id]\n      }\n\n    const handleSubmit =  () =>{\n        const new_comment = comment[comment_id]\n        console.log(new_comment)\n        console.log(comment_id)\n        postComment(new_comment, username,comment_id)\n    }\n\n    return (\n        <div>\n            {allPosts && allPosts.map((post,i) => {\n                const {_id} = post;\n                return(\n                    <>\n                        <br />\n                        <div>{post._id}</div>\n                        <div>{post.title}</div>\n                        <div>{post.content}</div>\n                        <div>Written by:{post.username}</div>\n                        <br />\n                        {/* <textarea id={_id} onChange={e => setComment(e.target.value)} value={comment || ''}></textarea> */}\n                        <textarea key={post._id} data-mongo-id={post._id} id={i} onChange={handleChange}></textarea>\n                        <button  onClick={handleSubmit}>Leave a Comment</button>\n                    </>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Posts"]},"metadata":{},"sourceType":"module"}