{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/components/IndividualPost/IndividualPost.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport AuthContext from '../../AuthContext';\nimport { withRouter } from 'react-router-dom';\n\nconst IndividualPost = ({\n  postInfo\n}) => {\n  const {\n    state,\n    dispatch\n  } = useContext(AuthContext);\n  const {\n    username,\n    allPosts\n  } = state;\n  console.log(\"postInfo:\");\n  console.log(postInfo);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 33\n    }\n  }, postInfo.content), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 33\n    }\n  }, \"Written by:\", postInfo.username), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 33\n    }\n  }, \"Likes:\", postInfo.likes), /*#__PURE__*/React.createElement(LikePost, {\n    id: postInfo._id,\n    user: postInfo.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 33\n    }\n  }, postInfo.comments.map((sub, idx) => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 37\n    }\n  }, sub.commenter == username ? /*#__PURE__*/React.createElement(\"a\", {\n    role: \"button\",\n    onClick: e => editComment({\n      sub\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 71\n    }\n  }, \"edit\") : null, editMode && edit_id === sub._id ? /*#__PURE__*/React.createElement(EditComment, {\n    id: edit_id,\n    edit_flag: edit_flag,\n    post_id: postInfo._id,\n    content: sub.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 77\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 175\n    }\n  }, sub.content), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 41\n    }\n  }, \"by: \", sub.commenter), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 41\n    }\n  }, \"by: \", sub._id), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 41\n    }\n  }, \"Date posted: \", formatDate(sub.createdDate)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 41\n    }\n  }, \"Comment likes: \", sub.likes), /*#__PURE__*/React.createElement(LikeComment, {\n    comment_id: sub._id,\n    idx: idx,\n    favorites: state.favorites,\n    liked: sub.hasBeenLiked,\n    post_id: postInfo._id,\n    sub: sub,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(\"textarea\", {\n    key: postInfo._id,\n    id: idx,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-mongo-id\": postInfo._id,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }, \"Leave a Comment\"));\n};\n\nexport default withRouter(IndividualPost);","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/components/IndividualPost/IndividualPost.js"],"names":["React","useContext","useEffect","useState","AuthContext","withRouter","IndividualPost","postInfo","state","dispatch","username","allPosts","console","log","content","likes","_id","comments","map","sub","idx","commenter","e","editComment","editMode","edit_id","edit_flag","formatDate","createdDate","favorites","hasBeenLiked","handleChange","handleSubmit"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\nimport AuthContext from '../../AuthContext'\nimport {withRouter} from 'react-router-dom'\n\nconst IndividualPost = ({postInfo}) => {\n    const {state,dispatch} = useContext(AuthContext)\n    const {username,allPosts} = state\n    console.log(\"postInfo:\")\n    console.log(postInfo)\n\n    return (\n        <div>\n                                <div>{postInfo.content}</div>\n                                <div>Written by:{postInfo.username}</div>\n                                <div>Likes:{postInfo.likes}</div>\n                                    <LikePost id={postInfo._id} user={postInfo.username}/>\n                                    {/* idx={idx}  */}\n                                <br />\n                                <ul>\n                                {postInfo.comments.map((sub,idx) =>\n                                    <li>\n                                        {sub.commenter == username ? (<a role=\"button\" onClick={e => editComment({sub})}>edit</a>):null}\n                                        {editMode && edit_id === sub._id ? (<EditComment id={edit_id} edit_flag={edit_flag} post_id={postInfo._id}content={sub.content} />) :(<div>{sub.content}</div> )}\n                                        <div>by: {sub.commenter}</div>\n                                        <div>by: {sub._id}</div>\n                                        <div>Date posted: {formatDate(sub.createdDate)}</div>\n                                        <div>Comment likes: {sub.likes}</div>\n                                        <LikeComment comment_id={sub._id} idx={idx} favorites={state.favorites} liked={sub.hasBeenLiked} post_id={postInfo._id} sub={sub}/>\n                                        <br />\n                                    </li>\n                                    )}\n                                </ul>\n                                <textarea key={postInfo._id} id={idx} onChange={handleChange}></textarea>\n                            <button data-mongo-id={postInfo._id} onClick={handleSubmit}>Leave a Comment</button>\n                            </div> \n    )\n}\n\nexport default withRouter(IndividualPost)\n"]},"metadata":{},"sourceType":"module"}