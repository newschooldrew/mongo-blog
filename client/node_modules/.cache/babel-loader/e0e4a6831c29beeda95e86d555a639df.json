{"ast":null,"code":"import axios from 'axios';\nexport const createUser = (user, dispatch) => {\n  axios.post('/create-user', user, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    }\n  }).then(res => {\n    const {\n      data\n    } = res;\n    console.log(data);\n\n    if (res.data === 'user already exists') {\n      console.log(\"user already exists!\");\n      localStorage.setItem(\"sign_up_msg\", \"user already exists\");\n    }\n  });\n  dispatch({\n    type: \"CREATE_USER\",\n    payload: data\n  });\n};\nexport const signInUser = (user, history) => {\n  axios.post('/sign-in-user', user, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    }\n  }).then(res => {\n    console.log(res.data);\n\n    if (res.data === 'user not found' || res.data === 'password not found') {\n      localStorage.setItem(\"sign_in_msg\", \"login credentials not found\");\n    } else {\n      localStorage.setItem('username', res.headers['username']);\n      localStorage.setItem('token', res.headers['authorization']);\n      history.push('/welcome');\n    }\n  });\n};\nexport const getUser = () => {\n  const token = localStorage.getItem('token');\n\n  if (token) {\n    console.log(\"welcome\");\n    console.log(token);\n  } else {\n    console.log(\"please sign in\");\n  }\n};\nexport const signOut = history => {\n  localStorage.removeItem('username');\n  localStorage.removeItem('token');\n  history.push('/');\n};\nexport const createPost = post => {\n  axios.post('/create-new-post', post).then(res => {\n    if (res.headers.post === 'success') {\n      localStorage.setItem('success', \"Thanks! Post was successfully created\");\n    }\n  });\n};\nexport const fetchPosts = async (username, dispatch) => {\n  const res = await axios.post('/fetch-posts', {\n    username: username\n  });\n  console.log(\"fetch posts response is: \");\n  console.log(res.data);\n  dispatch({\n    type: \"FETCH_POSTS\",\n    payload: res.data\n  });\n};\nexport const fetchAllPosts = async (username, dispatch) => {\n  const res = await axios.get('/fetch-all-posts');\n  console.log(\"fetch all posts:\");\n  console.log(res);\n  dispatch({\n    type: \"FETCH_ALL_POSTS\",\n    payload: res.data\n  });\n};\nexport const postComment = (comment, username, id, key, dispatch) => {\n  const content = {\n    comment,\n    username,\n    id,\n    key\n  };\n  axios.post('/create-comment', content).then(res => {\n    console.log(\"comment posted\");\n    console.log(res.data);\n    const comments = res.data.comments; // const allComments = res.data\n    // console.log(allComments)\n\n    dispatch({\n      type: \"POST_ALL_COMMENTS\",\n      payload: comments\n    });\n  });\n}; // export const fetchAllComments = dispatch =>{\n//     axios.get('/fetch-all-comments').then(res => {\n//         const allComments = res.data\n//         console.log(\"allComments:\")\n//         console.log(allComments)\n//         dispatch({type:\"FETCH_ALL_COMMENTS\",payload:allComments})\n//     })\n// }","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/actions.js"],"names":["axios","createUser","user","dispatch","post","headers","then","res","data","console","log","localStorage","setItem","type","payload","signInUser","history","push","getUser","token","getItem","signOut","removeItem","createPost","fetchPosts","username","fetchAllPosts","get","postComment","comment","id","key","content","comments"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nexport const createUser =  (user, dispatch) => {\n    axios.post('/create-user',user,{ \n            headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'}\n        }).then(res => {\n            const {data} = res;\n            console.log(data)\n            if(res.data === 'user already exists'){\n                console.log(\"user already exists!\")\n                localStorage.setItem(\"sign_up_msg\",\"user already exists\")\n            }\n        })\n        dispatch({type:\"CREATE_USER\",payload:data})\n    }\n\nexport const signInUser = (user,history) =>{\n        \n        axios.post('/sign-in-user',user,{ \n        headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n        }\n    }).then(res => {\n        console.log(res.data)\n        \n        if(res.data === 'user not found' || res.data === 'password not found'){\n            localStorage.setItem(\"sign_in_msg\",\"login credentials not found\")\n        }\n         else{\n            localStorage.setItem('username',res.headers['username'])\n            localStorage.setItem('token',res.headers['authorization'])\n\n            history.push('/welcome')\n        }\n    })\n}\n\nexport const getUser = () =>{\n\n    const token = localStorage.getItem('token');\n    if(token){\n        console.log(\"welcome\")\n        console.log(token)\n    }else{\n        console.log(\"please sign in\")\n    }\n}\n\nexport const signOut = history =>{\n    localStorage.removeItem('username')\n    localStorage.removeItem('token')\n    history.push('/')\n}\n\nexport const createPost = post =>{\n    axios.post('/create-new-post', post).then(res => {\n        if(res.headers.post === 'success'){\n            localStorage.setItem('success',\"Thanks! Post was successfully created\")\n        }\n    })\n}\n\nexport const fetchPosts = async (username,dispatch) =>{\n    const res = await axios.post('/fetch-posts',{username:username});\n        console.log(\"fetch posts response is: \")\n        console.log(res.data)\n        dispatch({type:\"FETCH_POSTS\",payload:res.data})\n    }\n\nexport const fetchAllPosts = async (username,dispatch) =>{\n    const res = await axios.get('/fetch-all-posts');\n    console.log(\"fetch all posts:\")\n    console.log(res)\n    dispatch({type:\"FETCH_ALL_POSTS\",payload:res.data})\n}\n\nexport const postComment = (comment,username,id,key,dispatch) =>{\n    const content = {comment,username,id,key}\n    axios.post('/create-comment', content).then(res => {\n        console.log(\"comment posted\")\n        console.log(res.data)\n        const comments = res.data.comments;\n        // const allComments = res.data\n        // console.log(allComments)\n        dispatch({type:\"POST_ALL_COMMENTS\",payload:comments})\n    })\n}\n\n// export const fetchAllComments = dispatch =>{\n//     axios.get('/fetch-all-comments').then(res => {\n//         const allComments = res.data\n//         console.log(\"allComments:\")\n//         console.log(allComments)\n//         dispatch({type:\"FETCH_ALL_COMMENTS\",payload:allComments})\n//     })\n// }"]},"metadata":{},"sourceType":"module"}