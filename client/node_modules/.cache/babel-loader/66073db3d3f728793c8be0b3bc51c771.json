{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/components/Posts/Posts.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport AuthContext from '../../AuthContext';\nimport { fetchAllPosts, postComment } from '../../actions';\nimport update from 'react-addons-update';\n\nconst Posts = () => {\n  const {\n    state,\n    dispatch\n  } = useContext(AuthContext);\n  const {\n    username,\n    allPosts\n  } = state;\n  const [comment, setComment] = useState({});\n  const [comment_id, setId] = useState('');\n  const [key, setKey] = useState('');\n  console.log(state);\n  useEffect(() => {\n    fetchAllPosts(username, dispatch);\n  }, [username]);\n  let new_comment;\n\n  const handleChange = e => {\n    e.persist();\n    setId(e.target.id);\n    console.log(comment_id);\n    setComment({\n      [e.target.id]: e.target.value\n    });\n    console.log(comment[e.target.id]);\n    new_comment = comment[e.target.id];\n    setKey(e.target.getAttribute('data-mongo-id'));\n    console.log(key);\n  };\n\n  const handleSubmit = e => {\n    console.log(key);\n    console.log(e.target.getAttribute('data-mongo-id'));\n    const newData = update(key, {\n      $set: e.target.getAttribute('data-mongo-id')\n    });\n    console.log(newData); // if(key !== e.target.getAttribute('data-mongo-id')){\n    //     console.log(\"key is different\")\n    //     setKey(e.target.getAttribute('data-mongo-id'))\n    // }\n\n    const new_comment = comment[comment_id];\n    console.log(new_comment);\n    console.log(comment_id);\n    postComment(new_comment, username, comment_id, newData, dispatch);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, allPosts && allPosts.map((post, i) => {\n    const {\n      _id\n    } = post;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, post._id), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, post.title), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, post.content), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, \"Written by:\", post.username), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      key: post._id,\n      id: i,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-mongo-id\": post._id,\n      onClick: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, \"Leave a Comment\"));\n  }));\n};\n\nexport default Posts;","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/components/Posts/Posts.js"],"names":["React","useContext","useEffect","useState","AuthContext","fetchAllPosts","postComment","update","Posts","state","dispatch","username","allPosts","comment","setComment","comment_id","setId","key","setKey","console","log","new_comment","handleChange","e","persist","target","id","value","getAttribute","handleSubmit","newData","$set","map","post","i","_id","title","content"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\nimport AuthContext from '../../AuthContext'\nimport {fetchAllPosts,postComment} from '../../actions'\nimport update from 'react-addons-update'\n\nconst Posts = () => {\n    const {state,dispatch} = useContext(AuthContext)\n    const {username,allPosts} = state;\n    const [comment, setComment] = useState({})\n    const [comment_id, setId] = useState('')\n    const [key, setKey] = useState('')\n    console.log(state)\n    useEffect(() =>{\n        fetchAllPosts(username,dispatch)\n    },[username])\n\n    let new_comment;\n    const handleChange = e => {\n        e.persist()\n        setId(e.target.id)\n        console.log(comment_id)\n        setComment({[e.target.id]:e.target.value});\n        console.log(comment[e.target.id])\n        new_comment = comment[e.target.id]\n        setKey(e.target.getAttribute('data-mongo-id'))\n        console.log(key)\n    }\n    \n    const handleSubmit =  e =>{\n        console.log(key)\n        console.log(e.target.getAttribute('data-mongo-id'))\n\n        const newData = update(key,{\n            $set:e.target.getAttribute('data-mongo-id')\n        })\n\n        console.log(newData)\n\n        // if(key !== e.target.getAttribute('data-mongo-id')){\n        //     console.log(\"key is different\")\n        //     setKey(e.target.getAttribute('data-mongo-id'))\n        // }\n        const new_comment = comment[comment_id]\n        console.log(new_comment)\n        console.log(comment_id)\n        postComment(new_comment, username,comment_id,newData,dispatch)\n    }\n\n    return (\n        <div>\n            {allPosts && allPosts.map((post,i) => {\n                const {_id} = post;\n                return(\n                    <>\n                        <br />\n                        <div>{post._id}</div>\n                        <div>{post.title}</div>\n                        <div>{post.content}</div>\n                        <div>Written by:{post.username}</div>\n                        <br />\n                        {/* <textarea id={_id} onChange={e => setComment(e.target.value)} value={comment || ''}></textarea> */}\n                        <textarea key={post._id} id={i} onChange={handleChange}></textarea>\n                        <button data-mongo-id={post._id} onClick={handleSubmit}>Leave a Comment</button>\n                    </>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Posts"]},"metadata":{},"sourceType":"module"}