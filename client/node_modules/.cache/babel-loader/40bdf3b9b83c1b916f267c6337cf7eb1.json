{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/AuthProvider.js\";\nimport React, { createContext, useReducer, useEffect, useState } from 'react';\nimport Reducer from './Reducer';\nimport AuthContext from './AuthContext';\nexport const AuthProvider = props => {\n  const [username, setUsername] = useState('');\n  const [state, dispatch] = useReducer(Reducer, AuthContext);\n  useEffect(() => {\n    console.log(\"this aint bad!\");\n\n    if (state.username) {\n      console.log(state.username);\n    } else {\n      console.log(\"username not found in provider store\");\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, Object.assign({\n    value: {\n      state,\n      dispatch,\n      username\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }));\n};\nexport default AuthProvider;","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/AuthProvider.js"],"names":["React","createContext","useReducer","useEffect","useState","Reducer","AuthContext","AuthProvider","props","username","setUsername","state","dispatch","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA6BC,UAA7B,EAAyCC,SAAzC,EAAmDC,QAAnD,QAAkE,OAAlE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AACnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAOC,QAAP,IAAmBV,UAAU,CAACG,OAAD,EAAUC,WAAV,CAAnC;AAGAH,EAAAA,SAAS,CAAC,MAAI;AACVU,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,QAAGH,KAAK,CAACF,QAAT,EAAkB;AACdI,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACF,QAAlB;AACH,KAFD,MAEM;AACFI,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACH;AACJ,GAPQ,EAOP,EAPO,CAAT;AAQA,sBACI,oBAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AAACH,MAAAA,KAAD;AAAOC,MAAAA,QAAP;AAAgBH,MAAAA;AAAhB;AADX,KAEQD,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAMH,CAnBM;AAoBP,eAAeD,YAAf","sourcesContent":["import React, {createContext,useReducer, useEffect,useState} from 'react'\nimport Reducer from './Reducer'\nimport AuthContext from './AuthContext'\n\nexport const AuthProvider = (props) => {\n    const [username, setUsername] = useState('')\n    const [state,dispatch] = useReducer(Reducer, AuthContext)\n\n    \n    useEffect(()=>{\n        console.log(\"this aint bad!\")\n        if(state.username){\n            console.log(state.username)\n        } else{\n            console.log(\"username not found in provider store\")\n        }\n    },[])\n    return(\n        <AuthContext.Provider\n            value={{state,dispatch,username}}\n            {...props}\n        />\n    )\n}\nexport default AuthProvider;"]},"metadata":{},"sourceType":"module"}