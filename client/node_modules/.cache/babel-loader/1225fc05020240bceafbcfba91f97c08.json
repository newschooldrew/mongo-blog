{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/AuthProvider.js\";\nimport React, { useReducer, useEffect } from 'react';\nimport Reducer from './Reducer';\nimport AuthContext from './AuthContext';\nimport axios from 'axios';\nimport { fetchPosts } from '../src/actions';\nimport jwt from 'jsonwebtoken';\nexport const AuthProvider = props => {\n  const [state, dispatch] = useReducer(Reducer, AuthContext);\n  const fetchPosts = fetchPosts(username, dispatch);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const decoded = jwt.verify(token, 'jk234sf98');\n      dispatch({\n        type: \"FETCH_USER\",\n        payload: decoded.username\n      });\n    } else {\n      console.log(\"you must sign in\");\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, Object.assign({\n    value: {\n      state,\n      dispatch,\n      fetchPosts\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }));\n};\nexport default AuthProvider;","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/AuthProvider.js"],"names":["React","useReducer","useEffect","Reducer","AuthContext","axios","fetchPosts","jwt","AuthProvider","props","state","dispatch","username","token","localStorage","getItem","decoded","verify","type","payload","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AACnC,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBV,UAAU,CAACE,OAAD,EAAUC,WAAV,CAAnC;AACA,QAAME,UAAU,GAAGA,UAAU,CAACM,QAAD,EAAUD,QAAV,CAA7B;AAEAT,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMW,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAGF,KAAH,EAAS;AACL,YAAMG,OAAO,GAAGT,GAAG,CAACU,MAAJ,CAAWJ,KAAX,EAAiB,WAAjB,CAAhB;AACAF,MAAAA,QAAQ,CAAC;AAACO,QAAAA,IAAI,EAAC,YAAN;AAAmBC,QAAAA,OAAO,EAACH,OAAO,CAACJ;AAAnC,OAAD,CAAR;AACH,KAHD,MAGM;AACFQ,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;AACJ,GARQ,EAQP,EARO,CAAT;AASA,sBACI,oBAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AAACX,MAAAA,KAAD;AAAOC,MAAAA,QAAP;AAAgBL,MAAAA;AAAhB;AADX,KAEQG,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAMH,CAnBM;AAoBP,eAAeD,YAAf","sourcesContent":["import React, {useReducer, useEffect} from 'react'\nimport Reducer from './Reducer'\nimport AuthContext from './AuthContext'\nimport axios from 'axios'\nimport {fetchPosts} from '../src/actions'\nimport jwt from 'jsonwebtoken'\n\nexport const AuthProvider = (props) => {\n    const [state,dispatch] = useReducer(Reducer, AuthContext)\n    const fetchPosts = fetchPosts(username,dispatch);\n\n    useEffect(()=>{\n        const token = localStorage.getItem('token');\n        if(token){\n            const decoded = jwt.verify(token,'jk234sf98')\n            dispatch({type:\"FETCH_USER\",payload:decoded.username})\n        } else{\n            console.log(\"you must sign in\")\n        }\n    },[])\n    return(\n        <AuthContext.Provider\n            value={{state,dispatch,fetchPosts}}\n            {...props}\n        />\n    )\n}\nexport default AuthProvider;"]},"metadata":{},"sourceType":"module"}