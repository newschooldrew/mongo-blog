{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/components/IndividualPost/IndividualPost.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport AuthContext from '../../AuthContext';\nimport { withRouter } from 'react-router-dom';\n\nconst IndividualPost = ({\n  match\n}) => {\n  const {\n    state,\n    dispatch\n  } = useContext(AuthContext);\n  console.log(state);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, match.params.postId);\n};\n\nexport default withRouter(IndividualPost);","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/components/IndividualPost/IndividualPost.js"],"names":["React","useContext","useEffect","useState","AuthContext","withRouter","IndividualPost","match","state","dispatch","console","log","params","postId"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;AACA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAChC,QAAM;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAmBR,UAAU,CAACG,WAAD,CAAnC;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACK,MAAN,CAAaC,MADlB,CADJ;AA8BH,CAjCD;;AAmCA,eAAeR,UAAU,CAACC,cAAD,CAAzB","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\nimport AuthContext from '../../AuthContext'\nimport {withRouter} from 'react-router-dom'\nconst IndividualPost = ({match}) => {\n    const {state,dispatch} = useContext(AuthContext)\n    console.log(state)\n    return (\n        <div>\n            {match.params.postId}\n            {/* <div>{post._id}</div>\n                                <Link to={`${match.url}/${post._id}`}>{post.title}</Link>\n                                <div>{post.content}</div>\n                                <div>Written by:{post.username}</div>\n                                <div>Likes:{post.likes}</div>\n                                    <LikePost id={post._id} idx={idx} user={post.username}/>\n                                <br />\n                                <ul>\n                                {post.comments.map((sub,idx) =>\n                                    <li>\n                                        {sub.commenter == username ? (<a role=\"button\" onClick={e => editComment({sub})}>edit</a>):null}\n                                        {editMode && edit_id === sub._id ? (<EditComment id={edit_id} edit_flag={edit_flag} post_id={post._id}content={sub.content} />) :(<div>{sub.content}</div> )}\n                                        <div>by: {sub.commenter}</div>\n                                        <div>by: {sub._id}</div>\n                                        <div>Date posted: {formatDate(sub.createdDate)}</div>\n                                        <div>Comment likes: {sub.likes}</div>\n                                        <LikeComment comment_id={sub._id} idx={idx} favorites={state.favorites} liked={sub.hasBeenLiked} post_id={post._id} sub={sub}/>\n                                        <br />\n                                    </li>\n                                    )}\n                                </ul>\n                                <textarea key={post._id} id={idx} onChange={handleChange}></textarea>\n                            <button data-mongo-id={post._id} onClick={handleSubmit}>Leave a Comment</button>\n                            </div> */}\n\n        </div>\n    )\n}\n\nexport default withRouter(IndividualPost)\n"]},"metadata":{},"sourceType":"module"}