{"ast":null,"code":"import axios from 'axios';\nimport React from 'react';\nexport const createUser = user => {\n  axios.post('/create-user', user, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    }\n  }).then(res => {\n    if (res.data == 'user already exists') {\n      localStorage.setItem(\"error_msg\", \"user already exists\");\n    }\n  });\n};\nexport const signInUser = (user, history) => {\n  axios.post('/sign-in-user', user, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    }\n  }).then(res => {\n    console.log(res.data);\n\n    if (res.data === 'user not found' || res.data === 'password not found') {\n      localStorage.setItem(\"error_msg\", \"login credentials not found\");\n    } else {\n      localStorage.setItem('username', res.headers['username']);\n      localStorage.setItem('token', res.headers['authorization']);\n      history.push('/welcome');\n    }\n  });\n};\nexport const getUser = () => {\n  const token = localStorage.getItem('token');\n\n  if (token) {\n    console.log(\"welcome\");\n    console.log(token);\n  } else {\n    console.log(\"please sign in\");\n  }\n};\nexport const signOut = history => {\n  localStorage.removeItem('username');\n  localStorage.removeItem('token');\n  history.push('/');\n};","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/actions.js"],"names":["axios","React","createUser","user","post","headers","then","res","data","localStorage","setItem","signInUser","history","console","log","push","getUser","token","getItem","signOut","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAIC,IAAI,IAAI;AAC/BH,EAAAA,KAAK,CAACI,IAAN,CAAW,cAAX,EAA0BD,IAA1B,EAA+B;AACvBE,IAAAA,OAAO,EAAE;AACT,sBAAgB,kBADP;AAET,gBAAU;AAFD;AADc,GAA/B,EAIOC,IAJP,CAIYC,GAAG,IAAI;AACX,QAAGA,GAAG,CAACC,IAAJ,IAAY,qBAAf,EAAqC;AACjCC,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiC,qBAAjC;AACH;AACJ,GARL;AASC,CAVE;AAYP,OAAO,MAAMC,UAAU,GAAG,CAACR,IAAD,EAAMS,OAAN,KAAiB;AACnCZ,EAAAA,KAAK,CAACI,IAAN,CAAW,eAAX,EAA2BD,IAA3B,EAAgC;AAChCE,IAAAA,OAAO,EAAE;AACT,sBAAgB,kBADP;AAET,gBAAU;AAFD;AADuB,GAAhC,EAKDC,IALC,CAKIC,GAAG,IAAI;AACXM,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACC,IAAhB;;AAEA,QAAGD,GAAG,CAACC,IAAJ,KAAa,gBAAb,IAAiCD,GAAG,CAACC,IAAJ,KAAa,oBAAjD,EAAsE;AAClEC,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiC,6BAAjC;AACH,KAFD,MAGK;AACDD,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCH,GAAG,CAACF,OAAJ,CAAY,UAAZ,CAAhC;AACAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BH,GAAG,CAACF,OAAJ,CAAY,eAAZ,CAA7B;AACAO,MAAAA,OAAO,CAACG,IAAR,CAAa,UAAb;AACH;AACJ,GAhBG;AAiBP,CAlBM;AAoBP,OAAO,MAAMC,OAAO,GAAG,MAAK;AAExB,QAAMC,KAAK,GAAGR,YAAY,CAACS,OAAb,CAAqB,OAArB,CAAd;;AACA,MAAGD,KAAH,EAAS;AACLJ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,GAHD,MAGK;AACDJ,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;AACJ,CATM;AAWP,OAAO,MAAMK,OAAO,GAAGP,OAAO,IAAG;AAC7BH,EAAAA,YAAY,CAACW,UAAb,CAAwB,UAAxB;AACAX,EAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACAR,EAAAA,OAAO,CAACG,IAAR,CAAa,GAAb;AACH,CAJM","sourcesContent":["import axios from 'axios'\nimport React from 'react'\n\nexport const createUser =  user => {\n    axios.post('/create-user',user,{ \n            headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'}\n        }).then(res => {\n            if(res.data == 'user already exists'){\n                localStorage.setItem(\"error_msg\",\"user already exists\")\n            }\n        })\n    }\n\nexport const signInUser = (user,history) =>{\n        axios.post('/sign-in-user',user,{ \n        headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n        }\n    }).then(res => {\n        console.log(res.data)\n        \n        if(res.data === 'user not found' || res.data === 'password not found'){\n            localStorage.setItem(\"error_msg\",\"login credentials not found\")\n        }\n         else{\n            localStorage.setItem('username',res.headers['username'])\n            localStorage.setItem('token',res.headers['authorization'])\n            history.push('/welcome')\n        }\n    })\n}\n\nexport const getUser = () =>{\n\n    const token = localStorage.getItem('token');\n    if(token){\n        console.log(\"welcome\")\n        console.log(token)\n    }else{\n        console.log(\"please sign in\")\n    }\n}\n\nexport const signOut = history =>{\n    localStorage.removeItem('username')\n    localStorage.removeItem('token')\n    history.push('/')\n}"]},"metadata":{},"sourceType":"module"}