{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/components/Posts/Posts.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport AuthContext from '../../AuthContext';\nimport { Link } from 'react-router-dom';\nimport { fetchAllPosts, postComment, fetchFavorites } from '../../actions';\nimport update from 'react-addons-update';\nimport EditComment from '../EditComment/EditComment';\nimport LikeComment from '../LikeComment/LikeComment';\nimport LikePost from '../LikePost/LikePost';\n\nconst Posts = ({\n  match\n}) => {\n  const {\n    state,\n    dispatch\n  } = useContext(AuthContext);\n  const {\n    username,\n    allPosts,\n    newComment,\n    editMode,\n    commentLiked,\n    postLiked,\n    postDisliked,\n    favorites\n  } = state;\n  const [comment, setComment] = useState({});\n  const [comment_id, setId] = useState('');\n  const [edit_id, setEditId] = useState('');\n  const [edit_flag, setEditFlag] = useState(false);\n  const [key, setKey] = useState('');\n  console.log(\"state:\");\n  console.log(state);\n  console.log(\"allPosts:\");\n  console.log(allPosts);\n  console.log(\"newComment:\");\n  console.log(newComment);\n  useEffect(() => {\n    fetchAllPosts(username, dispatch);\n    fetchFavorites(username, dispatch);\n  }, [username, editMode, newComment, commentLiked, postLiked, postDisliked]);\n  let new_comment;\n\n  const formatDate = date => {\n    const newDate = new Date(date).toLocaleDateString('en-US');\n    const newTime = new Date(date).toLocaleTimeString('en-US');\n    return `${newDate} at ${newTime}`;\n  };\n\n  const editComment = info => {\n    console.log(\"info:\");\n    console.log(info.sub._id);\n    console.log(\"Edit hit\");\n    setEditId(info.sub._id);\n    dispatch({\n      type: \"TOGGLE_EDIT_MODE\",\n      payload: editMode\n    });\n  };\n\n  const handleChange = e => {\n    e.persist();\n    setId(e.target.id);\n    setComment({\n      [e.target.id]: e.target.value\n    });\n    new_comment = comment[e.target.id];\n    setKey(e.target.getAttribute('data-mongo-id'));\n  };\n\n  const handleSubmit = async e => {\n    console.log(key);\n    console.log(e.target.getAttribute('data-mongo-id'));\n    const newData = update(key, {\n      $set: e.target.getAttribute('data-mongo-id')\n    });\n    const new_comment = comment[comment_id];\n    await postComment(new_comment, username, comment_id, newData, dispatch);\n    await setComment('');\n  };\n\n  if (!favorites) return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 28\n    }\n  }, \"loading...\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, allPosts && allPosts.map((post, idx) => {\n    console.log(\"****************\");\n    console.log(\"comparison:\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    }, post._id), /*#__PURE__*/React.createElement(Link, {\n      to: `${match.url}/${post._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }, post.title), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }, post.content), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    }, \"Written by:\", post.username), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }, \"Likes:\", post.likes), /*#__PURE__*/React.createElement(LikePost, {\n      id: post._id,\n      favorites: favorites,\n      user: post.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }, post.comments.map((sub, idx) => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, sub.commenter == username ? /*#__PURE__*/React.createElement(\"a\", {\n      role: \"button\",\n      onClick: e => editComment({\n        sub\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 71\n      }\n    }, \"edit\") : null, editMode && edit_id === sub._id ? /*#__PURE__*/React.createElement(EditComment, {\n      id: edit_id,\n      edit_flag: edit_flag,\n      post_id: post._id,\n      content: sub.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 77\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 171\n      }\n    }, sub.content), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 41\n      }\n    }, \"by: \", sub.commenter), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 41\n      }\n    }, \"by: \", sub._id), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 41\n      }\n    }, \"Date posted: \", formatDate(sub.createdDate)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 41\n      }\n    }, \"Comment likes: \", sub.likes), /*#__PURE__*/React.createElement(LikeComment, {\n      comment_id: sub._id,\n      idx: idx,\n      favorites: favorites,\n      liked: sub.hasBeenLiked,\n      post_id: post._id,\n      sub: sub,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(\"textarea\", {\n      key: post._id,\n      id: idx,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-mongo-id\": post._id,\n      onClick: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, \"Leave a Comment\"));\n  }));\n};\n\nexport default Posts;","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/components/Posts/Posts.js"],"names":["React","useContext","useEffect","useState","AuthContext","Link","fetchAllPosts","postComment","fetchFavorites","update","EditComment","LikeComment","LikePost","Posts","match","state","dispatch","username","allPosts","newComment","editMode","commentLiked","postLiked","postDisliked","favorites","comment","setComment","comment_id","setId","edit_id","setEditId","edit_flag","setEditFlag","key","setKey","console","log","new_comment","formatDate","date","newDate","Date","toLocaleDateString","newTime","toLocaleTimeString","editComment","info","sub","_id","type","payload","handleChange","e","persist","target","id","value","getAttribute","handleSubmit","newData","$set","map","post","idx","url","title","content","likes","comments","commenter","createdDate","hasBeenLiked"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\nimport AuthContext from '../../AuthContext'\nimport {Link} from 'react-router-dom'\nimport {fetchAllPosts,postComment, fetchFavorites} from '../../actions'\nimport update from 'react-addons-update'\nimport EditComment from '../EditComment/EditComment'\nimport LikeComment from '../LikeComment/LikeComment'\nimport LikePost from '../LikePost/LikePost'\n\nconst Posts = ({match}) => {\n    const {state,dispatch} = useContext(AuthContext)\n    const {username,allPosts,newComment,editMode,commentLiked,postLiked,postDisliked,favorites} = state;\n    const [comment, setComment] = useState({})\n    const [comment_id, setId] = useState('')\n    const [edit_id, setEditId] = useState('')\n    const [edit_flag, setEditFlag] = useState(false)\n    const [key, setKey] = useState('')\n    \n    console.log(\"state:\")\n    console.log(state)\n    console.log(\"allPosts:\")\n    console.log(allPosts)\n    console.log(\"newComment:\")\n    console.log(newComment)\n\n    useEffect(() =>{\n        fetchAllPosts(username,dispatch)\n        fetchFavorites(username,dispatch)\n    },[username,editMode,newComment,commentLiked,postLiked,postDisliked])\n\n    let new_comment;\n\n    const formatDate = date =>{\n        const newDate = new Date(date).toLocaleDateString('en-US');\n        const newTime = new Date(date).toLocaleTimeString('en-US')\n        return `${newDate} at ${newTime}`\n    }\n\n    const editComment = info =>{\n        console.log(\"info:\")\n        console.log(info.sub._id)\n        console.log(\"Edit hit\")\n        setEditId(info.sub._id)\n        dispatch({type:\"TOGGLE_EDIT_MODE\",payload:editMode})\n    }\n\n    const handleChange = e => {\n        e.persist()\n        setId(e.target.id)\n        setComment({[e.target.id]:e.target.value});\n        new_comment = comment[e.target.id]\n        setKey(e.target.getAttribute('data-mongo-id'))\n    }\n    \n    const handleSubmit =  async e =>{\n        console.log(key)\n        console.log(e.target.getAttribute('data-mongo-id'))\n\n        const newData = update(key,{\n            $set:e.target.getAttribute('data-mongo-id')\n        })\n\n        const new_comment = comment[comment_id]\n        await postComment(new_comment, username,comment_id,newData,dispatch)\n        await setComment('');\n    }\n\n    if(!favorites) return (<span>loading...</span>);\n\n    return (\n        <div>\n            {allPosts && allPosts.map((post,idx) => {\n                console.log(\"****************\")\n                console.log(\"comparison:\")\n                return(\n                <div>\n                \n                <br />\n                                <div>{post._id}</div>\n                                <Link to={`${match.url}/${post._id}`}>{post.title}</Link>\n                                <div>{post.content}</div>\n                                <div>Written by:{post.username}</div>\n                                <div>Likes:{post.likes}</div>\n                                    <LikePost id={post._id} favorites={favorites} user={post.username}/>\n                                <br />\n                                <ul>\n                                {post.comments.map((sub,idx) =>\n                                    <li>\n                                        {sub.commenter == username ? (<a role=\"button\" onClick={e => editComment({sub})}>edit</a>):null}\n                                        {editMode && edit_id === sub._id ? (<EditComment id={edit_id} edit_flag={edit_flag} post_id={post._id}content={sub.content} />) :(<div>{sub.content}</div> )}\n                                        <div>by: {sub.commenter}</div>\n                                        <div>by: {sub._id}</div>\n                                        <div>Date posted: {formatDate(sub.createdDate)}</div>\n                                        <div>Comment likes: {sub.likes}</div>\n                                        <LikeComment comment_id={sub._id} idx={idx} favorites={favorites} liked={sub.hasBeenLiked} post_id={post._id} sub={sub}/>\n                                        <br />\n                                    </li>\n                                    )}\n                                </ul>\n                                <textarea key={post._id} id={idx} onChange={handleChange}></textarea>\n                            <button data-mongo-id={post._id} onClick={handleSubmit}>Leave a Comment</button>\n                            </div>)                    \n                }\n            )}\n\n        </div>\n    )\n}\n\nexport default Posts"]},"metadata":{},"sourceType":"module"}