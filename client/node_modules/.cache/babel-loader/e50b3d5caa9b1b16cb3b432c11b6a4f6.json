{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/AuthProvider.js\";\nimport React, { useReducer, useEffect } from 'react';\nimport Reducer from './Reducer';\nimport AuthContext from './AuthContext';\nimport axios from 'axios';\nexport const AuthProvider = props => {\n  const [state, dispatch] = useReducer(Reducer, AuthContext);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const decoded = jwt.verify(token, 'jk234sf98');\n    console.log(decoded); // dispatch({type:\"FETCH_USER\",payload:token.username})\n\n    console.log(\"auth provider token is \" + token);\n    axios.post('/current_user', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }, token).then(res => {\n      console.log(\"response from /current_user is \");\n      console.log(res);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, Object.assign({\n    value: {\n      state,\n      dispatch\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }));\n};\nexport default AuthProvider;","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/july_projects/mongo-blog/client/src/AuthProvider.js"],"names":["React","useReducer","useEffect","Reducer","AuthContext","axios","AuthProvider","props","state","dispatch","token","localStorage","getItem","decoded","jwt","verify","console","log","post","headers","then","res"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AACnC,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBR,UAAU,CAACE,OAAD,EAAUC,WAAV,CAAnC;AAGAF,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,OAAO,GAAGC,GAAG,CAACC,MAAJ,CAAWL,KAAX,EAAiB,WAAjB,CAAhB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAHU,CAIV;;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BP,KAAxC;AACAL,IAAAA,KAAK,CAACa,IAAN,CAAW,eAAX,EAA2B;AACvBC,MAAAA,OAAO,EAAE;AACT,wBAAgB,kBADP;AAET,kBAAU;AAFD;AADc,KAA3B,EAIET,KAJF,EAISU,IAJT,CAIcC,GAAG,IAAE;AACXL,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACH,KAPL;AAUH,GAjBQ,EAiBP,EAjBO,CAAT;AAkBA,sBACI,oBAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AAACb,MAAAA,KAAD;AAAOC,MAAAA;AAAP;AADX,KAEQF,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAMH,CA5BM;AA6BP,eAAeD,YAAf","sourcesContent":["import React, {useReducer, useEffect} from 'react'\nimport Reducer from './Reducer'\nimport AuthContext from './AuthContext'\nimport axios from 'axios'\n\nexport const AuthProvider = (props) => {\n    const [state,dispatch] = useReducer(Reducer, AuthContext)\n\n    \n    useEffect(()=>{\n        const token = localStorage.getItem('token');\n        const decoded = jwt.verify(token,'jk234sf98')\n        console.log(decoded)\n        // dispatch({type:\"FETCH_USER\",payload:token.username})\n        \n        console.log(\"auth provider token is \" + token)\n        axios.post('/current_user',{ \n            headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'}\n        },token).then(res=>{\n                console.log(\"response from /current_user is \")\n                console.log(res)\n            })\n            \n        \n    },[])\n    return(\n        <AuthContext.Provider\n            value={{state,dispatch}}\n            {...props}\n        />\n    )\n}\nexport default AuthProvider;"]},"metadata":{},"sourceType":"module"}